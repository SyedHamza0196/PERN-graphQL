{"ast":null,"code":"var _jsxFileName = \"/home/macho/Desktop/heroku/app/client/src/Components/BookList.js\";\nimport React, { useState } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { getBooksQuery } from \"../queries/queries\";\nimport BookDetail from './BookDetail';\n\nfunction BookList() {\n  // const { loading, data } = useQuery(getBooksQuery);\n  async function f() {\n    let promise = new Promise(() => {\n      const {\n        loading,\n        data\n      } = useQuery(getBooksQuery);\n    });\n    let result = await promise; // wait until the promise resolves (*)\n\n    return result; // \"done!\"\n  }\n\n  const {\n    data\n  } = f();\n  console.log(\"hereeeeee\"); // const {temp} = data;\n\n  console.log(data.books);\n  const [selected, setselected] = useState(1);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 16\n      }\n    }, \"Loading...\");\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      id: \"book-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, data.books.map(book => /*#__PURE__*/React.createElement(\"li\", {\n      key: book.id,\n      value: book.id,\n      onClick: e => {\n        setselected(e.target.value);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }\n    }, book.name))), /*#__PURE__*/React.createElement(BookDetail, {\n      bookId: selected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }));\n  }\n}\n\nexport default BookList; // export default BookList;","map":{"version":3,"sources":["/home/macho/Desktop/heroku/app/client/src/Components/BookList.js"],"names":["React","useState","useQuery","getBooksQuery","BookDetail","BookList","f","promise","Promise","loading","data","result","console","log","books","selected","setselected","map","book","id","e","target","value","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAAQC,aAAR,QAA4B,oBAA5B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,SAASC,QAAT,GAAoB;AAChB;AAEA,iBAAeC,CAAf,GAAmB;AAEf,QAAIC,OAAO,GAAG,IAAIC,OAAJ,CAAY,MAAM;AAC5B,YAAM;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,UAAoBR,QAAQ,CAACC,aAAD,CAAlC;AACH,KAFa,CAAd;AAIA,QAAIQ,MAAM,GAAG,MAAMJ,OAAnB,CANe,CAMa;;AAE5B,WAAOI,MAAP,CARe,CAQA;AAChB;;AAEH,QAAM;AAACD,IAAAA;AAAD,MAASJ,CAAC,EAAhB;AAEAM,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAhBgB,CAiBhB;;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,KAAjB;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,CAAD,CAAxC;;AAEA,MAAIQ,OAAJ,EAAY;AACR,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACH,GAFD,MAEM;AACF,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,EAAE,EAAC,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKC,IAAI,CAACI,KAAL,CAAWG,GAAX,CAAeC,IAAI,iBAChB;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAkB,MAAA,KAAK,EAAED,IAAI,CAACC,EAA9B;AAAkC,MAAA,OAAO,EAAGC,CAAD,IAAK;AAACJ,QAAAA,WAAW,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AAA4B,OAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgFJ,IAAI,CAACK,IAArF,CADH,CADL,CADJ,eAMI,oBAAC,UAAD;AAAY,MAAA,MAAM,EAAER,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADJ;AAUH;AACF;;AAEH,eAAeV,QAAf,C,CACA","sourcesContent":["import React, { useState } from 'react';\nimport { useQuery } from '@apollo/client'\nimport {getBooksQuery} from \"../queries/queries\"\nimport BookDetail from './BookDetail'\n\nfunction BookList() {\n    // const { loading, data } = useQuery(getBooksQuery);\n\n    async function f() {\n\n        let promise = new Promise(() => {\n            const { loading, data } = useQuery(getBooksQuery);\n        });\n      \n        let result = await promise; // wait until the promise resolves (*)\n      \n        return result; // \"done!\"\n      }\n      \n    const {data} = f();\n\n    console.log(\"hereeeeee\");\n    // const {temp} = data;\n    console.log(data.books);\n    const [selected, setselected] = useState(1);\n\n    if (loading){\n        return <p>Loading...</p>;\n    }else {\n        return (\n            <div>\n                <ul id=\"book-list\">\n                    {data.books.map(book=>(\n                        <li key={book.id} value={book.id} onClick={(e)=>{setselected(e.target.value)}}>{book.name}</li>\n                    ))}\n                </ul>\n                <BookDetail bookId={selected}/>\n            </div>\n        )\n    }\n  }\n\nexport default BookList;\n// export default BookList;"]},"metadata":{},"sourceType":"module"}